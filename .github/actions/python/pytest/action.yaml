name: pytest tests
description: "Install dependencies and run tests using pytest"

inputs:
  test_command:
    required: false
    description: "Pytest command to run"
    default: python -m pytest
  python_version:
    required: false
    description: Python version to run
    default: "3.9"
  requirements_file:
    required: false
    description: "Path to requirements file"
    default: "requirements.txt"

outputs:
  test_result:
    description: 'My output description'
    value: ${{ steps.test.outputs.test_result }}

runs:
  using: "composite"
  steps:

  - name: Set up Python
    id: setup_python
    uses: actions/setup-python@v4
    with:
      python-version: ${{ inputs.python_version }}

  - name: cache virtualenv
    uses: actions/cache@v3
    id: cache-venv
    with:
      path: ./.venv/
      key: ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-${{ hashFiles('**/requirements.txt') }}
      restore-keys: |
        ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-

  - name: Install dependencies
    if: steps.cache-venv.outputs.cache-hit != 'true'
    shell: bash
    run: |
      python -m venv ./.venv
      source ./.venv/bin/activate
      python -m pip install pytest
      python -m pip install -r ${{ inputs.requirements_file }}

  # Linters

  # - name: Lint with flake8
  #   run: |
  #     pip install flake8
  #     flake8 --max-line-length 100 --exclude .github,.git,__pycache__,*.pyc,*.pyo,*.pyd,_pycache_

  # - name: Lint with black
  #   run: |
  #     pip install black
  #     black --check --exclude .github . 

  - name: Run pytest
    id: test
    shell: bash
    run: |
      source ./.venv/bin/activate
      pytest_output=$(python -m pytest --collect-only 2>&1 || true)
      if [[ $pytest_output == *"collected 0 items"* ]]; then
        echo "No tests found. Exiting with success status code."
      else
        echo "Tests found. Running pytest."
        ${{ inputs.test_command }}
      fi
      echo "test_result=${{ job.status }}" >> $GITHUB_OUTPUT
